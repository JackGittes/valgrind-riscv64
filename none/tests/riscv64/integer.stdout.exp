Base integer instructions, shared operations
lui a0, 0 ::
  output: a0=0x0000000000000000
lui a0, 1 ::
  output: a0=0x0000000000001000
lui a0, 2 ::
  output: a0=0x0000000000002000
lui a0, 4 ::
  output: a0=0x0000000000004000
lui a0, 8 ::
  output: a0=0x0000000000008000
lui a0, 16 ::
  output: a0=0x0000000000010000
lui a0, 32 ::
  output: a0=0x0000000000020000
lui a0, 64 ::
  output: a0=0x0000000000040000
lui a0, 128 ::
  output: a0=0x0000000000080000
lui a0, 256 ::
  output: a0=0x0000000000100000
lui a0, 512 ::
  output: a0=0x0000000000200000
lui a0, 1024 ::
  output: a0=0x0000000000400000
lui a0, 2048 ::
  output: a0=0x0000000000800000
lui a0, 4096 ::
  output: a0=0x0000000001000000
lui a0, 8192 ::
  output: a0=0x0000000002000000
lui a0, 16384 ::
  output: a0=0x0000000004000000
lui a0, 32768 ::
  output: a0=0x0000000008000000
lui a0, 65536 ::
  output: a0=0x0000000010000000
lui a0, 131072 ::
  output: a0=0x0000000020000000
lui a0, 262144 ::
  output: a0=0x0000000040000000
lui a0, 524288 ::
  output: a0=0xffffffff80000000
lui a0, 1048575 ::
  output: a0=0xfffffffffffff000
lui t6, 1 ::
  output: t6=0x0000000000001000
jal t0, .+4 ::
  output: t0=1f+4
  target: reached
jal t0, .+6 ::
  output: t0=1f+4
  target: reached
jal t0, .+8 ::
  output: t0=1f+4
  target: reached
jal t0, .+16 ::
  output: t0=1f+4
  target: reached
jal t0, .+32 ::
  output: t0=1f+4
  target: reached
jal t0, .+64 ::
  output: t0=1f+4
  target: reached
jal t0, .+128 ::
  output: t0=1f+4
  target: reached
jal t0, .+256 ::
  output: t0=1f+4
  target: reached
jal t0, .+512 ::
  output: t0=1f+4
  target: reached
jal t0, .+1024 ::
  output: t0=1f+4
  target: reached
jal t0, .+2048 ::
  output: t0=1f+4
  target: reached
jal t0, .-4 ::
  output: t0=1f+4
  target: reached
jal t0, .-6 ::
  output: t0=1f+4
  target: reached
jal t0, .-2048 ::
  output: t0=1f+4
  target: reached
jal t6, .+4 ::
  output: t6=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f+4
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f+6
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f+8
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f-4
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f-6
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f-8
  output: ra=1f+4
  target: reached
jalr ra, 0(t0) ::
  inputs: t0=1f-8
  output: ra=1f+4
  target: reached
jalr ra, 1(t0) ::
  inputs: t0=1f-9
  output: ra=1f+4
  target: reached
jalr ra, 2(t0) ::
  inputs: t0=1f-10
  output: ra=1f+4
  target: reached
jalr ra, 4(t0) ::
  inputs: t0=1f-12
  output: ra=1f+4
  target: reached
jalr ra, 8(t0) ::
  inputs: t0=1f-16
  output: ra=1f+4
  target: reached
jalr ra, 16(t0) ::
  inputs: t0=1f-24
  output: ra=1f+4
  target: reached
jalr ra, 32(t0) ::
  inputs: t0=1f-40
  output: ra=1f+4
  target: reached
jalr ra, 64(t0) ::
  inputs: t0=1f-72
  output: ra=1f+4
  target: reached
jalr ra, 128(t0) ::
  inputs: t0=1f-136
  output: ra=1f+4
  target: reached
jalr ra, 256(t0) ::
  inputs: t0=1f-264
  output: ra=1f+4
  target: reached
jalr ra, 512(t0) ::
  inputs: t0=1f-520
  output: ra=1f+4
  target: reached
jalr ra, 1024(t0) ::
  inputs: t0=1f-1032
  output: ra=1f+4
  target: reached
jalr ra, 2047(t0) ::
  inputs: t0=1f-2055
  output: ra=1f+4
  target: reached
jalr ra, -1(t0) ::
  inputs: t0=1f-7
  output: ra=1f+4
  target: reached
jalr ra, -2048(t0) ::
  inputs: t0=1f+2040
  output: ra=1f+4
  target: reached
jalr ra, 0(t6) ::
  inputs: t6=1f+4
  output: ra=1f+4
  target: reached
beq a0, a1, .+4 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+6 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+8 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+16 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+32 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+64 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+128 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+256 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+512 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+1024 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .+2048 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .-4 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .-6 ::
  inputs: a0=0, a1=0
  target: reached
beq a0, a1, .-2048 ::
  inputs: a0=0, a1=0
  target: reached
beq t5, t6, .+4 ::
  inputs: t5=0, t6=0
  target: reached
beq a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: taken
beq a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: not taken
beq a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: not taken
beq a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: taken
beq a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: taken
beq a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: not taken
beq zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: taken
beq zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: not taken
beq a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: not taken
beq a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: not taken
beq a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: not taken
bne a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: not taken
bne a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: not taken
bne a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: taken
bne zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: not taken
bne zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: taken
bne a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: not taken
blt a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: not taken
blt a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: taken
blt a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: not taken
blt a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: not taken
blt a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: not taken
blt a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: not taken
blt zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: not taken
blt zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: taken
blt a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: not taken
blt a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: taken
blt a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: not taken
bge a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: taken
bge a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: not taken
bge a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: taken
bge a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: taken
bge a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: taken
bge a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: taken
bge zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: taken
bge zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: not taken
bge a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: taken
bge a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: not taken
bge a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: taken
bltu a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: not taken
bltu a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: taken
bltu a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: not taken
bltu a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: not taken
bltu a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: not taken
bltu a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: not taken
bltu zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: not taken
bltu zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: taken
bltu a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: taken
bltu a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: not taken
bltu a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: not taken
bgeu a0, a1, 1f ::
  inputs: a0=0, a1=0
  branch: taken
bgeu a0, a1, 1f ::
  inputs: a0=0, a1=1
  branch: not taken
bgeu a0, a1, 1f ::
  inputs: a0=1, a1=0
  branch: taken
bgeu a0, a1, 1f ::
  inputs: a0=1, a1=1
  branch: taken
bgeu a0, zero, 1f ::
  inputs: a0=0, zero=0
  branch: taken
bgeu a0, zero, 1f ::
  inputs: a0=1, zero=0
  branch: taken
bgeu zero, a0, 1f ::
  inputs: zero=0, a0=0
  branch: taken
bgeu zero, a0, 1f ::
  inputs: zero=0, a0=1
  branch: not taken
bgeu a0, a1, 1f ::
  inputs: a0=0, a1=-1
  branch: not taken
bgeu a0, a1, 1f ::
  inputs: a0=-1, a1=0
  branch: taken
bgeu a0, a1, 1f ::
  inputs: a0=-1, a1=-1
  branch: taken
lw a0, 0(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000041dc8da0
  no memory changes
lw a0, 4(a1) ::
  inputs: a1=&area_mid
  output: a0=0xffffffff8aa9987b
  no memory changes
lw a0, 8(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000355229e8
  no memory changes
lw a0, 16(a1) ::
  inputs: a1=&area_mid
  output: a0=0xfffffffffeb20cc3
  no memory changes
lw a0, 32(a1) ::
  inputs: a1=&area_mid
  output: a0=0xffffffffdb9b22c9
  no memory changes
lw a0, 64(a1) ::
  inputs: a1=&area_mid
  output: a0=0xffffffff879ff2e1
  no memory changes
lw a0, 128(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000593a2a60
  no memory changes
lw a0, 256(a1) ::
  inputs: a1=&area_mid
  output: a0=0xffffffffec73d785
  no memory changes
lw a0, 512(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000622d87cb
  no memory changes
lw a0, 1024(a1) ::
  inputs: a1=&area_mid
  output: a0=0xffffffffad1b44c8
  no memory changes
lw a0, 2044(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000002cebbb5
  no memory changes
lw a0, -4(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000070a54ae6
  no memory changes
lw a0, -2048(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000002d7e670a
  no memory changes
lw a4, 0(a5) ::
  inputs: a5=&area_mid
  output: a4=0xffffffffe24b896b
  no memory changes
lbu a0, 0(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000002c
  no memory changes
lbu a0, 1(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000061
  no memory changes
lbu a0, 2(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000065
  no memory changes
lbu a0, 4(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000000e1
  no memory changes
lbu a0, 8(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000025
  no memory changes
lbu a0, 16(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000031
  no memory changes
lbu a0, 32(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000097
  no memory changes
lbu a0, 64(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000006e
  no memory changes
lbu a0, 128(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000006e
  no memory changes
lbu a0, 256(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000093
  no memory changes
lbu a0, 512(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000000d9
  no memory changes
lbu a0, 1024(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000000d6
  no memory changes
lbu a0, 2047(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000000d5
  no memory changes
lbu a0, -1(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000044
  no memory changes
lbu a0, -2048(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000000017
  no memory changes
lbu a4, 0(a5) ::
  inputs: a5=&area_mid
  output: a4=0x0000000000000079
  no memory changes
lhu a0, 0(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000353a
  no memory changes
lhu a0, 2(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000005fe6
  no memory changes
lhu a0, 4(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000005350
  no memory changes
lhu a0, 8(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000155f
  no memory changes
lhu a0, 16(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000071f8
  no memory changes
lhu a0, 32(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000d958
  no memory changes
lhu a0, 64(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000cda3
  no memory changes
lhu a0, 128(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000004d8a
  no memory changes
lhu a0, 256(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000008a7f
  no memory changes
lhu a0, 512(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000005a65
  no memory changes
lhu a0, 1024(a1) ::
  inputs: a1=&area_mid
  output: a0=0x00000000000057a2
  no memory changes
lhu a0, 2046(a1) ::
  inputs: a1=&area_mid
  output: a0=0x0000000000004b82
  no memory changes
lhu a0, -2(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000ba59
  no memory changes
lhu a0, -2048(a1) ::
  inputs: a1=&area_mid
  output: a0=0x000000000000fa64
  no memory changes
lhu a4, 0(a5) ::
  inputs: a5=&area_mid
  output: a4=0x0000000000001cc5
  no memory changes
sb a0, 0(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 1(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. 89 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 2(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. 89 .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 4(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. 89 .. .. .. .. .. .. .. .. .. .. ..
sb a0, 8(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. .. .. .. .. 89 .. .. .. .. .. .. ..
sb a0, 16(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+016]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 32(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+032]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 64(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+064]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 128(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+128]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 256(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+256]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 512(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+512]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 1024(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+1024]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a0, 2047(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+2032]  .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. 89
sb a0, -1(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-016]  .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. 89
sb a0, -2048(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-2048]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sb a4, 0(a5) ::
  inputs: a4=0xabcdef0123456789, a5=&area_mid
  [+000]  89 .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 0(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 2(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. 89 67 .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 4(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. 89 67 .. .. .. .. .. .. .. .. .. ..
sh a0, 8(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. .. .. .. .. 89 67 .. .. .. .. .. ..
sh a0, 16(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+016]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 32(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+032]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 64(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+064]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 128(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+128]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 256(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+256]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 512(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+512]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 1024(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+1024]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a0, 2046(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+2032]  .. .. .. .. .. .. .. .. .. .. .. .. .. .. 89 67
sh a0, -2(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-016]  .. .. .. .. .. .. .. .. .. .. .. .. .. .. 89 67
sh a0, -2048(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-2048]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sh a4, 0(a5) ::
  inputs: a4=0xabcdef0123456789, a5=&area_mid
  [+000]  89 67 .. .. .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 0(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 4(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. 89 67 45 23 .. .. .. .. .. .. .. ..
sw a0, 8(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+000]  .. .. .. .. .. .. .. .. 89 67 45 23 .. .. .. ..
sw a0, 16(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+016]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 32(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+032]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 64(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+064]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 128(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+128]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 256(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+256]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 512(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+512]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 1024(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+1024]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a0, 2044(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [+2032]  .. .. .. .. .. .. .. .. .. .. .. .. 89 67 45 23
sw a0, -4(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-016]  .. .. .. .. .. .. .. .. .. .. .. .. 89 67 45 23
sw a0, -2048(a1) ::
  inputs: a0=0xabcdef0123456789, a1=&area_mid
  [-2048]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
sw a4, 0(a5) ::
  inputs: a4=0xabcdef0123456789, a5=&area_mid
  [+000]  89 67 45 23 .. .. .. .. .. .. .. .. .. .. .. ..
addi a0, a1, 1 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001001
addi a0, a1, 2 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001002
addi a0, a1, 4 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001004
addi a0, a1, 8 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001008
addi a0, a1, 16 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001010
addi a0, a1, 32 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001020
addi a0, a1, 64 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001040
addi a0, a1, 128 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001080
addi a0, a1, 256 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001100
addi a0, a1, 1024 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000001400
addi a0, a1, 2047 ::
  inputs: a1=0x0000000000001000
  output: a0=0x00000000000017ff
addi a0, a1, -1 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000000fff
addi a0, a1, -2048 ::
  inputs: a1=0x0000000000001000
  output: a0=0x0000000000000800
addi a0, a1, 1 ::
  inputs: a1=0x000000007fffffff
  output: a0=0x0000000080000000
addi a0, a1, 1 ::
  inputs: a1=0x00000000fffffffe
  output: a0=0x00000000ffffffff
addi a0, a1, 1 ::
  inputs: a1=0x00000000ffffffff
  output: a0=0x0000000100000000
addi t5, t6, 1 ::
  inputs: t6=0x0000000000001000
  output: t5=0x0000000000001001
slti a0, a1, 0 ::
  inputs: a1=0x0000000000000000
  output: a0=0x0000000000000000
slti a0, a1, 0 ::
  inputs: a1=0x0000000000000001
  output: a0=0x0000000000000000
slti a0, a1, 0 ::
  inputs: a1=0xffffffffffffffff
  output: a0=0x0000000000000001
slti a0, a1, 0x7ff ::
  inputs: a1=0x00000000000007ff
  output: a0=0x0000000000000000
slti a0, a1, 0x7ff ::
  inputs: a1=0x0000000000000800
  output: a0=0x0000000000000000
slti a0, a1, 0xffffffffffffffff ::
  inputs: a1=0xffffffffffffffff
  output: a0=0x0000000000000000
slti a0, a1, 0xffffffffffffffff ::
  inputs: a1=0x0000000000000000
  output: a0=0x0000000000000000
slti t5, t6, 0 ::
  inputs: t6=0x0000000000000000
  output: t5=0x0000000000000000
slti t5, t6, 0 ::
  inputs: t6=0x0000000000000001
  output: t5=0x0000000000000000
sltiu a0, a1, 0 ::
  inputs: a1=0x0000000000000000
  output: a0=0x0000000000000000
sltiu a0, a1, 0 ::
  inputs: a1=0x0000000000000001
  output: a0=0x0000000000000000
sltiu a0, a1, 0 ::
  inputs: a1=0xffffffffffffffff
  output: a0=0x0000000000000000
sltiu a0, a1, 0x7ff ::
  inputs: a1=0x00000000000007ff
  output: a0=0x0000000000000000
sltiu a0, a1, 0x7ff ::
  inputs: a1=0x0000000000000800
  output: a0=0x0000000000000000
sltiu a0, a1, 0xffffffffffffffff ::
  inputs: a1=0xffffffffffffffff
  output: a0=0x0000000000000000
sltiu a0, a1, 0xffffffffffffffff ::
  inputs: a1=0x0000000000000000
  output: a0=0x0000000000000001
sltiu t5, t6, 0 ::
  inputs: t6=0x0000000000000000
  output: t5=0x0000000000000000
sltiu t5, t6, 0 ::
  inputs: t6=0x0000000000000001
  output: t5=0x0000000000000000
xori a0, a1, 0 ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000ffff0000ffff
xori a0, a1, 0 ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffff0000ffff0000
xori a0, a1, 0x7ff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000ffff0000f800
xori a0, a1, 0x7ff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffff0000ffff07ff
xori a0, a1, 0xffffffffffffffff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0xffff0000ffff0000
xori a0, a1, 0xffffffffffffffff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0x0000ffff0000ffff
xori t5, t6, 0 ::
  inputs: t6=0x0000ffff0000ffff
  output: t5=0x0000ffff0000ffff
ori a0, a1, 0 ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000ffff0000ffff
ori a0, a1, 0 ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffff0000ffff0000
ori a0, a1, 0x7ff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000ffff0000ffff
ori a0, a1, 0x7ff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffff0000ffff07ff
ori a0, a1, 0xffffffffffffffff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0xffffffffffffffff
ori a0, a1, 0xffffffffffffffff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffffffffffffffff
ori t5, t6, 0 ::
  inputs: t6=0x0000ffff0000ffff
  output: t5=0x0000ffff0000ffff
andi a0, a1, 0 ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000000000000000
andi a0, a1, 0 ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0x0000000000000000
andi a0, a1, 0x7ff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x00000000000007ff
andi a0, a1, 0x7ff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0x0000000000000000
andi a0, a1, 0xffffffffffffffff ::
  inputs: a1=0x0000ffff0000ffff
  output: a0=0x0000ffff0000ffff
andi a0, a1, 0xffffffffffffffff ::
  inputs: a1=0xffff0000ffff0000
  output: a0=0xffff0000ffff0000
andi t5, t6, 0 ::
  inputs: t6=0x0000ffff0000ffff
  output: t5=0x0000000000000000
slli a0, a1, 0 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xabcdef0123456789
slli a0, a1, 1 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x579bde02468acf12
slli a0, a1, 2 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xaf37bc048d159e24
slli a0, a1, 4 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xbcdef01234567890
slli a0, a1, 8 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xcdef012345678900
slli a0, a1, 16 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xef01234567890000
slli a0, a1, 32 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x2345678900000000
slli a0, a1, 63 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x8000000000000000
slli t5, t6, 1 ::
  inputs: t6=0xabcdef0123456789
  output: t5=0x579bde02468acf12
srli a0, a1, 0 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xabcdef0123456789
srli a0, a1, 1 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x55e6f78091a2b3c4
srli a0, a1, 2 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x2af37bc048d159e2
srli a0, a1, 4 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x0abcdef012345678
srli a0, a1, 8 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x00abcdef01234567
srli a0, a1, 16 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x0000abcdef012345
srli a0, a1, 32 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x00000000abcdef01
srli a0, a1, 63 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0x0000000000000001
srli t5, t6, 1 ::
  inputs: t6=0xabcdef0123456789
  output: t5=0x55e6f78091a2b3c4
srai a0, a1, 0 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xabcdef0123456789
srai a0, a1, 1 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xd5e6f78091a2b3c4
srai a0, a1, 2 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xeaf37bc048d159e2
srai a0, a1, 4 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xfabcdef012345678
srai a0, a1, 8 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xffabcdef01234567
srai a0, a1, 16 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xffffabcdef012345
srai a0, a1, 32 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xffffffffabcdef01
srai a0, a1, 63 ::
  inputs: a1=0xabcdef0123456789
  output: a0=0xffffffffffffffff
srai t5, t6, 1 ::
  inputs: t6=0xabcdef0123456789
  output: t5=0xd5e6f78091a2b3c4
add a0, a1, a2 ::
  inputs: a1=0x0000000000001000, a2=0x0000000000002000
  output: a0=0x0000000000003000
add a0, a1, a2 ::
  inputs: a1=0x000000007fffffff, a2=0x0000000000000001
  output: a0=0x0000000080000000
add a0, a1, a2 ::
  inputs: a1=0x00000000fffffffe, a2=0x0000000000000001
  output: a0=0x00000000ffffffff
add a0, a1, a2 ::
  inputs: a1=0x00000000ffffffff, a2=0x0000000000000001
  output: a0=0x0000000100000000
add a0, a1, a2 ::
  inputs: a1=0xfffffffffffffffe, a2=0x0000000000000001
  output: a0=0xffffffffffffffff
add a0, a1, a2 ::
  inputs: a1=0xffffffffffffffff, a2=0x0000000000000001
  output: a0=0x0000000000000000
add t4, t5, t6 ::
  inputs: t5=0x0000000000001000, t6=0x0000000000002000
  output: t4=0x0000000000003000
sub a0, a1, a2 ::
  inputs: a1=0x0000000000001000, a2=0x0000000000000fff
  output: a0=0x0000000000000001
sub a0, a1, a2 ::
  inputs: a1=0x0000000000001000, a2=0x0000000000001000
  output: a0=0x0000000000000000
sub a0, a1, a2 ::
  inputs: a1=0x0000000000001000, a2=0x0000000000001001
  output: a0=0xffffffffffffffff
sub a0, a1, a2 ::
  inputs: a1=0xffffffffffffffff, a2=0x0000000000000000
  output: a0=0xffffffffffffffff
sub a0, a1, a2 ::
  inputs: a1=0x0000000100000000, a2=0x0000000000000001
  output: a0=0x00000000ffffffff
sub t4, t5, t6 ::
  inputs: t5=0x0000000000001000, t6=0x0000000000000fff
  output: t4=0x0000000000000001
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000000
  output: a0=0xabcdef0123456789
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000001
  output: a0=0x579bde02468acf12
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000002
  output: a0=0xaf37bc048d159e24
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000004
  output: a0=0xbcdef01234567890
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000008
  output: a0=0xcdef012345678900
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000010
  output: a0=0xef01234567890000
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000020
  output: a0=0x2345678900000000
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x000000000000003f
  output: a0=0x8000000000000000
sll a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000040
  output: a0=0xabcdef0123456789
sll t4, t5, t6 ::
  inputs: t5=0xabcdef0123456789, t6=0x0000000000000001
  output: t4=0x579bde02468acf12
sltu a0, a1, a2 ::
  inputs: a1=0x0000000000000000, a2=0x0000000000000000
  output: a0=0x0000000000000000
sltu a0, a1, a2 ::
  inputs: a1=0x0000000000000000, a2=0x0000000000000001
  output: a0=0x0000000000000001
sltu a0, a1, a2 ::
  inputs: a1=0x0000000000000000, a2=0xffffffffffffffff
  output: a0=0x0000000000000001
sltu t4, t5, t6 ::
  inputs: t5=0x0000000000000000, t6=0x0000000000000000
  output: t4=0x0000000000000000
sltu t4, t5, t6 ::
  inputs: t5=0x0000000000000000, t6=0x0000000000000001
  output: t4=0x0000000000000001
xor a0, a1, a2 ::
  inputs: a1=0x0000ffff0000ffff, a2=0x00000000ffffffff
  output: a0=0x0000ffffffff0000
xor t4, t5, t6 ::
  inputs: t5=0x0000ffff0000ffff, t6=0x00000000ffffffff
  output: t4=0x0000ffffffff0000
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000000
  output: a0=0xabcdef0123456789
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000001
  output: a0=0x55e6f78091a2b3c4
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000002
  output: a0=0x2af37bc048d159e2
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000004
  output: a0=0x0abcdef012345678
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000008
  output: a0=0x00abcdef01234567
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000010
  output: a0=0x0000abcdef012345
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000020
  output: a0=0x00000000abcdef01
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x000000000000003f
  output: a0=0x0000000000000001
srl a0, a1, a2 ::
  inputs: a1=0xabcdef0123456789, a2=0x0000000000000040
  output: a0=0xabcdef0123456789
srl t4, t5, t6 ::
  inputs: t5=0xabcdef0123456789, t6=0x0000000000000001
  output: t4=0x55e6f78091a2b3c4
or a0, a1, a2 ::
  inputs: a1=0x0000ffff0000ffff, a2=0x00000000ffffffff
  output: a0=0x0000ffffffffffff
or t4, t5, t6 ::
  inputs: t5=0x0000ffff0000ffff, t6=0x00000000ffffffff
  output: t4=0x0000ffffffffffff
and a0, a1, a2 ::
  inputs: a1=0x0000ffff0000ffff, a2=0x00000000ffffffff
  output: a0=0x000000000000ffff
and t4, t5, t6 ::
  inputs: t5=0x0000ffff0000ffff, t6=0x00000000ffffffff
  output: t4=0x000000000000ffff
fence ::

Base integer instructions, RV64I additions
